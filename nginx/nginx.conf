# Nginx aio/sendfile 优化
worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 性能优化
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;

    # 开启 Gzip 压缩，可以减小 json 文件传输大小
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 主服务器配置
    server {
        # 监听 80 端口
        listen 80;
        server_name localhost;

        # 允许跨域请求，对于前端地图应用至关重要
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # 如果是 OPTIONS 预检请求，直接返回 204
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # ================== 关键修改部分结束 ==================

        # 根目录指向我们挂载的数据卷
        root /usr/share/nginx/html;
        
        # 统一处理所有文件请求
        location / {
            # 尝试查找文件，如果找不到，返回 /blank.png
            # 这个单一的 location 块可以处理所有请求
            try_files $uri /blank.png;
        }

        # 对 JSON 文件设置特定的缓存策略
        location ~ \.json$ {
            # 禁用缓存，确保前端总是获取最新的时间戳列表
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            try_files $uri =404; # 如果 json 文件不存在，返回 404
        }
        
        # 对图片文件设置特定的缓存策略
        location ~* \.(jpg|jpeg|png|gif)$ {
            # 为瓦片设置长时间的浏览器缓存
            expires 30d;
            add_header Cache-Control "public";
            try_files $uri /blank.png; # 图片不存在时返回空白图片
        }
    }
}